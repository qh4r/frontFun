$main_background: #DD5511;
$font_color: #FFFFFF;
$sticky_class: sticky;
$url: './resources/img.jpg';
$bga: scroll;
$other_class: '.test .druga-w-linii';
$border: 1px solid #DDD;

//KOMENTARZE INLINE!!

//DZIEZDICZENIE

body {
  background-color: $main_background;
  color: $font_color;

  td {
    background-color: #3fa0ff;
    .inner {
      clear: both;
    }
  }

  a,
  a:link,
  a:active {
    text-decoration: none;
    color: $font_color;

  }
}

.header {
  .module .#{$sticky_class} {
    position: absolute;
    top: 0;
    left: 0;
  }
  background: url($url) $bga;
  border: $border;
  #{$other_class} {
   float: right;
  }

  //& daje selektor ktory wymaga obu klas
  &.main {
    background-color: #6894ff;
  }
}

//ROZSZERZENIA

.zawrzyj {
  font-size: 200%;
  text-align: center;
}

%placeholder {
  color: green;
  line-height: 2em;
}

.zawierajaca {
  @extend .zawrzyj;
  @extend %placeholder;
  color: red;
}

.inna {
  @extend %placeholder;
  font-size: 40px;
}

//MIXINY

@mixin test_mix($font, $bg) {
  color: blue;
  margin: 10px auto;
  background-color: $bg;
  @if $font > 20 {
    font-weight: 300;
  } @else {
    font-weight: 400;
  }
  font-size: $font;
  a {
    text-decoration: none;
    color: red;
    font-size: $font * 2;
  }
}

.przywolanie {
  @include test_mix(18px, #dddddd);
}

.drugie_przywolanie {
  @include test_mix(30px, #AA4444);
}

// ... umożliwia przyjęcie wielu argumentów w to miejsce
@mixin transitions($animated...) {
  -webkit-transition: $animated;
  -moz-transition: $animated;
  -ms-transition: $animated;
  -o-transition: $animated;
  transition: $animated;
}

.button-nice {
  @include transitions(color 0.3s, opacity 0.5s);
}

//MOZNA DEKLAROWAC MIXIN KTORY ZAASYMILUJE ZAWARTOsC
@mixin keyframes($frames){
  @-webkit-keyframes #{$frames} {
    @content
  }

  @-moz-keyframes #{$frames} {
    @content
  }

  @-o-keyframes #{$frames} {
    @content
  }

  @keyframes #{$frames} {
    @content
  }
}

//MIXIN NIE MUSI BYC ZAWARTY W KLASIE
  @include keyframes(myAnimationName){
    0% {opacity: 0}
    100% {opacity: 1}
  }

@mixin test2 ($pd) {
  padding: $pd*1.5 $pd;
}

.zpadowane {
  @include test2(10px);
  margin: 10px 10px;
}

.pokolorowane {
  @include test2(13px);
  color: turquoise;
}

//istnieja tez petle @while oraz @each,
//each moze wykorzystywac mapy klucz wartosc

$headers: h1, h2, h3, h4, h5, h6;
$values: 55px, 50px, 45px, 40px, 30px, 20px;

@for $i from 1 through length($headers) {
  #{ nth($headers, $i)} {
    font-size: nth($values, $i);
    margin-bottom: 20px/$i;
  }
}

//da sie tez deklarowac funkcje -- @function
// nie deklaruje sie zwracanego typu
// zwracana wartosc na @return


@function double($input) {
  @return $input*2;
}

p {
  font-size: double(60%);
}


.a {
  .b {
    .c {
      //AND ZAWRZE CALA SCIEZKE
      a & {
        text-decoration: none;
        color: crimson;
      }
    }
  }
}